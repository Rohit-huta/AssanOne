{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  msg: \"default message\",\n  user: \"\",\n  token: \"\",\n  loading: false,\n  error: \"\"\n};\nexport const registerUser = createAsyncThunk('registerUser', async body => {\n  const res = await fetch(\"\", {\n    method: \"post\",\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n});\nconst authSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducer: {},\n  extraReducers: {\n    [registerUser.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [registerUser.fulfilled]: (state, _ref) => {\n      let {\n        payload: {\n          error,\n          msg\n        }\n      } = _ref;\n      state.loading = false;\n      if (error) {\n        state.error = error;\n      } else state.msg = msg;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.loading = true;\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","msg","user","token","loading","error","registerUser","body","res","fetch","method","header","JSON","stringify","json","authSlice","name","reducer","extraReducers","pending","state","action","fulfilled","_ref","payload","rejected"],"sources":["/Users/channappa/Documents/Rohit/SOFTWARE ENGINEERING/Yash More/DashBoard/code/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n    msg: \"default message\",\n    user:  \"\",\n    token: \"\",\n    loading: false,\n    error: \"\"\n}\n\n\nexport const registerUser = createAsyncThunk('registerUser', async(body) => {\n    const res = await fetch(\"\", {\n        method: \"post\",\n        header: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body)\n    })\n\n    return await res.json()\n\n})\n\n\nconst authSlice = createSlice({\n    name: \"user\",\n    initialState,\n\n    reducer : {\n\n    },\n    extraReducers: {\n        [registerUser.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [registerUser.fulfilled]: (state, {payload: {error, msg}}) => {\n            state.loading = false\n            if(error) {\n                state.error = error\n            }else state.msg = msg\n        },\n        [registerUser.rejected]: (state, action) => {\n            state.loading = true;\n        },\n\n    }\n})\n\n\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAGhE,MAAMC,YAAY,GAAG;EACjBC,GAAG,EAAE,iBAAiB;EACtBC,IAAI,EAAG,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAGP,gBAAgB,CAAC,cAAc,EAAE,MAAMQ,IAAI,IAAK;EACxE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,EAAE,EAAE;IACxBC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACJ,cAAc,EAAE;IACpB,CAAC;IACDJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;EAC7B,CAAC,CAAC;EAEF,OAAO,MAAMC,GAAG,CAACM,IAAI,CAAC,CAAC;AAE3B,CAAC,CAAC;AAGF,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC1BkB,IAAI,EAAE,MAAM;EACZhB,YAAY;EAEZiB,OAAO,EAAG,CAEV,CAAC;EACDC,aAAa,EAAE;IACX,CAACZ,YAAY,CAACa,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAAChB,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACE,YAAY,CAACgB,SAAS,GAAG,CAACF,KAAK,EAAAG,IAAA,KAA8B;MAAA,IAA5B;QAACC,OAAO,EAAE;UAACnB,KAAK;UAAEJ;QAAG;MAAC,CAAC,GAAAsB,IAAA;MACrDH,KAAK,CAAChB,OAAO,GAAG,KAAK;MACrB,IAAGC,KAAK,EAAE;QACNe,KAAK,CAACf,KAAK,GAAGA,KAAK;MACvB,CAAC,MAAKe,KAAK,CAACnB,GAAG,GAAGA,GAAG;IACzB,CAAC;IACD,CAACK,YAAY,CAACmB,QAAQ,GAAG,CAACL,KAAK,EAAEC,MAAM,KAAK;MACxCD,KAAK,CAAChB,OAAO,GAAG,IAAI;IACxB;EAEJ;AACJ,CAAC,CAAC;AAGF,eAAeW,SAAS,CAACE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}